2020-04-29 12:17:21.680|main|INFO ||SpringApplication#logStartupProfileInfo:651|No active profile set, falling back to default profiles: default
2020-04-29 12:17:22.284|main|WARN ||EndpointId#logWarning:155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-29 12:17:22.377|main|INFO ||GenericScope#setSerializationId:295|BeanFactory id=cb64af2d-0566-32a2-84c2-5077e55b598d
2020-04-29 12:17:22.649|main|INFO ||TomcatWebServer#initialize:92|Tomcat initialized with port(s): 8761 (http)
2020-04-29 12:17:22.657|main|INFO ||DirectJDKLog#log:173|Initializing ProtocolHandler ["http-nio-8761"]
2020-04-29 12:17:22.657|main|INFO ||DirectJDKLog#log:173|Starting service [Tomcat]
2020-04-29 12:17:22.658|main|INFO ||DirectJDKLog#log:173|Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-29 12:17:22.744|main|INFO ||DirectJDKLog#log:173|Initializing Spring embedded WebApplicationContext
2020-04-29 12:17:22.745|main|INFO ||ServletWebServerApplicationContext#prepareWebApplicationContext:284|Root WebApplicationContext: initialization completed in 1050 ms
2020-04-29 12:17:22.810|main|WARN ||URLConfigurationSource#<init>:121|No URLs will be polled as dynamic configuration sources.
2020-04-29 12:17:22.811|main|INFO ||URLConfigurationSource#<init>:122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-29 12:17:22.817|main|INFO ||DynamicPropertyFactory#getInstance:281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@43a0a32d
2020-04-29 12:17:23.542|main|INFO ||WebApplicationImpl#_initiate:815|Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2020-04-29 12:17:23.590|main|INFO ||DiscoveryJerseyProvider#<init>:70|Using JSON encoding codec LegacyJacksonJson
2020-04-29 12:17:23.591|main|INFO ||DiscoveryJerseyProvider#<init>:71|Using JSON decoding codec LegacyJacksonJson
2020-04-29 12:17:23.681|main|INFO ||DiscoveryJerseyProvider#<init>:80|Using XML encoding codec XStreamXml
2020-04-29 12:17:23.681|main|INFO ||DiscoveryJerseyProvider#<init>:81|Using XML decoding codec XStreamXml
2020-04-29 12:17:24.010|main|INFO ||UserDetailsServiceAutoConfiguration#getOrDeducePassword:86|

Using generated security password: 32ae0c7b-feca-4613-9fe2-832ff0305fa4

2020-04-29 12:17:24.085|main|INFO ||DefaultSecurityFilterChain#<init>:43|Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62ea8931, org.springframework.security.web.context.SecurityContextPersistenceFilter@27e44e9c, org.springframework.security.web.header.HeaderWriterFilter@6cc48a17, org.springframework.security.web.csrf.CsrfFilter@482f7af0, org.springframework.security.web.authentication.logout.LogoutFilter@37ca3ca8, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1fe8f5e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1bee0085, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@656c5c3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47fb7ec9, org.springframework.security.web.session.SessionManagementFilter@30508066, org.springframework.security.web.access.ExceptionTranslationFilter@27ab206, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7cd5fcf4]
2020-04-29 12:17:24.095|main|WARN ||URLConfigurationSource#<init>:121|No URLs will be polled as dynamic configuration sources.
2020-04-29 12:17:24.096|main|INFO ||URLConfigurationSource#<init>:122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-29 12:17:24.231|main|INFO ||ExecutorConfigurationSupport#initialize:181|Initializing ExecutorService 'applicationTaskExecutor'
2020-04-29 12:17:24.904|main|WARN ||BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger#logWarning:86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-29 12:17:24.975|main|INFO ||InstanceInfoFactory#create:72|Setting initial instance status as: STARTING
2020-04-29 12:17:24.998|main|INFO ||DiscoveryClient#<init>:368|Initializing Eureka in region us-east-1
2020-04-29 12:17:24.999|main|INFO ||DiscoveryClient#<init>:371|Client configured to neither register nor query for data.
2020-04-29 12:17:25.004|main|INFO ||DiscoveryClient#<init>:384|Discovery Client initialized at timestamp 1588133845003 with initial instances count: 0
2020-04-29 12:17:25.033|main|INFO ||DefaultEurekaServerContext#initialize:66|Initializing ...
2020-04-29 12:17:25.034|main|INFO ||PeerEurekaNodes#updatePeerEurekaNodes:187|Adding new peer nodes [http://localhost:8761/eureka/]
2020-04-29 12:17:25.334|main|INFO ||DiscoveryJerseyProvider#<init>:70|Using JSON encoding codec LegacyJacksonJson
2020-04-29 12:17:25.334|main|INFO ||DiscoveryJerseyProvider#<init>:71|Using JSON decoding codec LegacyJacksonJson
2020-04-29 12:17:25.335|main|INFO ||DiscoveryJerseyProvider#<init>:80|Using XML encoding codec XStreamXml
2020-04-29 12:17:25.335|main|INFO ||DiscoveryJerseyProvider#<init>:81|Using XML decoding codec XStreamXml
2020-04-29 12:17:25.418|main|INFO ||PeerEurekaNodes#start:109|Replica node URL:  http://localhost:8761/eureka/
2020-04-29 12:17:25.425|main|INFO ||AbstractInstanceRegistry#initRemoteRegionRegistry:153|Finished initializing remote region registries. All known remote regions: []
2020-04-29 12:17:25.426|main|INFO ||DefaultEurekaServerContext#initialize:73|Initialized
2020-04-29 12:17:25.435|main|INFO ||EndpointLinksResolver#<init>:58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-29 12:17:25.447|RMI TCP Connection(3)-127.0.0.1|INFO ||DirectJDKLog#log:173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-29 12:17:25.447|RMI TCP Connection(3)-127.0.0.1|INFO ||FrameworkServlet#initServletBean:525|Initializing Servlet 'dispatcherServlet'
2020-04-29 12:17:25.452|RMI TCP Connection(3)-127.0.0.1|INFO ||FrameworkServlet#initServletBean:547|Completed initialization in 5 ms
2020-04-29 12:17:25.501|main|INFO ||EurekaServiceRegistry#register:41|Registering application EUREKA-SERVER with eureka with status UP
2020-04-29 12:17:25.504|Thread-19|INFO ||EurekaServerBootstrap#initEurekaEnvironment:110|Setting the eureka configuration..
2020-04-29 12:17:25.505|Thread-19|INFO ||EurekaServerBootstrap#initEurekaEnvironment:115|Eureka data center value eureka.datacenter is not set, defaulting to default
2020-04-29 12:17:25.505|Thread-19|INFO ||EurekaServerBootstrap#initEurekaEnvironment:129|Eureka environment value eureka.environment is not set, defaulting to test
2020-04-29 12:17:25.507|main|INFO ||DirectJDKLog#log:173|Starting ProtocolHandler ["http-nio-8761"]
2020-04-29 12:17:25.514|Thread-19|INFO ||EurekaServerBootstrap#isAws:188|isAws returned false
2020-04-29 12:17:25.514|Thread-19|INFO ||EurekaServerBootstrap#initEurekaServerContext:153|Initialized server context
2020-04-29 12:17:25.514|Thread-19|INFO ||PeerAwareInstanceRegistryImpl#openForTraffic:242|Got 1 instances from neighboring DS node
2020-04-29 12:17:25.514|Thread-19|INFO ||PeerAwareInstanceRegistryImpl#openForTraffic:243|Renew threshold is: 1
2020-04-29 12:17:25.515|Thread-19|INFO ||PeerAwareInstanceRegistryImpl#openForTraffic:254|Changing status to UP
2020-04-29 12:17:25.539|main|INFO ||TomcatWebServer#start:204|Tomcat started on port(s): 8761 (http) with context path ''
2020-04-29 12:17:25.571|main|INFO ||EurekaAutoServiceRegistration#onApplicationEvent:145|Updating port to 8761
2020-04-29 12:17:25.579|Thread-19|INFO ||EurekaServerInitializerConfiguration#lambda$start$0:72|Started Eureka Server
2020-04-29 12:17:25.869|main|INFO ||StartupInfoLogger#logStarted:61|Started EurekaApplication in 5.268 seconds (JVM running for 6.061)
2020-04-29 12:18:25.516|Eureka-EvictionTimer|INFO ||AbstractInstanceRegistry$EvictionTask#run:1247|Running the evict task with compensationTime 0ms
2020-04-29 12:18:37.696|RMI TCP Connection(12)-127.0.0.1|INFO ||SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin#shutdown:159|Application shutdown requested.
2020-04-29 12:18:37.697|RMI TCP Connection(12)-127.0.0.1|INFO ||EurekaServiceRegistry#deregister:65|Unregistering application EUREKA-SERVER with eureka with status DOWN
2020-04-29 12:18:37.699|RMI TCP Connection(12)-127.0.0.1|INFO ||DefaultEurekaServerContext#shutdown:79|Shutting down ...
2020-04-29 12:18:37.715|RMI TCP Connection(12)-127.0.0.1|INFO ||DefaultEurekaServerContext#shutdown:84|Shut down
2020-04-29 12:18:37.719|RMI TCP Connection(12)-127.0.0.1|INFO ||ExecutorConfigurationSupport#shutdown:218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-29 12:18:37.721|RMI TCP Connection(12)-127.0.0.1|INFO ||DiscoveryClient#shutdown:909|Shutting down DiscoveryClient ...
2020-04-29 12:18:37.722|RMI TCP Connection(12)-127.0.0.1|INFO ||DiscoveryClient#shutdown:934|Completed shut down of DiscoveryClient
2020-04-29 12:18:37.723|RMI TCP Connection(12)-127.0.0.1|INFO ||DirectJDKLog#log:173|Pausing ProtocolHandler ["http-nio-8761"]
2020-04-29 12:18:37.863|RMI TCP Connection(12)-127.0.0.1|INFO ||DirectJDKLog#log:173|Stopping service [Tomcat]
2020-04-29 12:18:37.865|RMI TCP Connection(12)-127.0.0.1|INFO ||DirectJDKLog#log:173|Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-04-29 12:18:37.868|RMI TCP Connection(12)-127.0.0.1|INFO ||DirectJDKLog#log:173|Stopping ProtocolHandler ["http-nio-8761"]
2020-04-29 12:18:37.872|RMI TCP Connection(12)-127.0.0.1|INFO ||DirectJDKLog#log:173|Destroying ProtocolHandler ["http-nio-8761"]
2020-04-29 12:19:56.057|main|INFO ||SpringApplication#logStartupProfileInfo:651|No active profile set, falling back to default profiles: default
2020-04-29 12:19:56.636|main|WARN ||EndpointId#logWarning:155|Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-04-29 12:19:56.725|main|INFO ||GenericScope#setSerializationId:295|BeanFactory id=cb64af2d-0566-32a2-84c2-5077e55b598d
2020-04-29 12:19:56.973|main|INFO ||TomcatWebServer#initialize:92|Tomcat initialized with port(s): 8761 (http)
2020-04-29 12:19:56.979|main|INFO ||DirectJDKLog#log:173|Initializing ProtocolHandler ["http-nio-8761"]
2020-04-29 12:19:56.980|main|INFO ||DirectJDKLog#log:173|Starting service [Tomcat]
2020-04-29 12:19:56.980|main|INFO ||DirectJDKLog#log:173|Starting Servlet engine: [Apache Tomcat/9.0.33]
2020-04-29 12:19:57.061|main|INFO ||DirectJDKLog#log:173|Initializing Spring embedded WebApplicationContext
2020-04-29 12:19:57.062|main|INFO ||ServletWebServerApplicationContext#prepareWebApplicationContext:284|Root WebApplicationContext: initialization completed in 992 ms
2020-04-29 12:19:57.118|main|WARN ||URLConfigurationSource#<init>:121|No URLs will be polled as dynamic configuration sources.
2020-04-29 12:19:57.119|main|INFO ||URLConfigurationSource#<init>:122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-29 12:19:57.140|main|INFO ||DynamicPropertyFactory#getInstance:281|DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1000d54d
2020-04-29 12:19:57.820|main|INFO ||WebApplicationImpl#_initiate:815|Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2020-04-29 12:19:57.866|main|INFO ||DiscoveryJerseyProvider#<init>:70|Using JSON encoding codec LegacyJacksonJson
2020-04-29 12:19:57.867|main|INFO ||DiscoveryJerseyProvider#<init>:71|Using JSON decoding codec LegacyJacksonJson
2020-04-29 12:19:57.946|main|INFO ||DiscoveryJerseyProvider#<init>:80|Using XML encoding codec XStreamXml
2020-04-29 12:19:57.946|main|INFO ||DiscoveryJerseyProvider#<init>:81|Using XML decoding codec XStreamXml
2020-04-29 12:19:58.305|main|INFO ||DefaultSecurityFilterChain#<init>:43|Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ac058a0, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d237460, org.springframework.security.web.header.HeaderWriterFilter@ef86c72, org.springframework.security.web.csrf.CsrfFilter@154b8cb6, org.springframework.security.web.authentication.logout.LogoutFilter@2abc55c4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@19cdc217, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b3a01d8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4faf1f4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@736b21ee, org.springframework.security.web.session.SessionManagementFilter@4eb9ae4d, org.springframework.security.web.access.ExceptionTranslationFilter@35563e4c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3b57dba4]
2020-04-29 12:19:58.315|main|WARN ||URLConfigurationSource#<init>:121|No URLs will be polled as dynamic configuration sources.
2020-04-29 12:19:58.315|main|INFO ||URLConfigurationSource#<init>:122|To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-29 12:19:58.417|main|INFO ||ExecutorConfigurationSupport#initialize:181|Initializing ExecutorService 'applicationTaskExecutor'
2020-04-29 12:19:58.966|main|WARN ||BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger#logWarning:86|You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-29 12:19:58.998|main|INFO ||InstanceInfoFactory#create:72|Setting initial instance status as: STARTING
2020-04-29 12:19:59.018|main|INFO ||DiscoveryClient#<init>:368|Initializing Eureka in region us-east-1
2020-04-29 12:19:59.019|main|INFO ||DiscoveryClient#<init>:371|Client configured to neither register nor query for data.
2020-04-29 12:19:59.023|main|INFO ||DiscoveryClient#<init>:384|Discovery Client initialized at timestamp 1588133999022 with initial instances count: 0
2020-04-29 12:19:59.048|main|INFO ||DefaultEurekaServerContext#initialize:66|Initializing ...
2020-04-29 12:19:59.049|main|INFO ||PeerEurekaNodes#updatePeerEurekaNodes:187|Adding new peer nodes [http://localhost:8761/eureka/]
2020-04-29 12:19:59.350|main|INFO ||DiscoveryJerseyProvider#<init>:70|Using JSON encoding codec LegacyJacksonJson
2020-04-29 12:19:59.350|main|INFO ||DiscoveryJerseyProvider#<init>:71|Using JSON decoding codec LegacyJacksonJson
2020-04-29 12:19:59.350|main|INFO ||DiscoveryJerseyProvider#<init>:80|Using XML encoding codec XStreamXml
2020-04-29 12:19:59.350|main|INFO ||DiscoveryJerseyProvider#<init>:81|Using XML decoding codec XStreamXml
2020-04-29 12:19:59.428|main|INFO ||PeerEurekaNodes#start:109|Replica node URL:  http://localhost:8761/eureka/
2020-04-29 12:19:59.434|main|INFO ||AbstractInstanceRegistry#initRemoteRegionRegistry:153|Finished initializing remote region registries. All known remote regions: []
2020-04-29 12:19:59.435|main|INFO ||DefaultEurekaServerContext#initialize:73|Initialized
2020-04-29 12:19:59.444|main|INFO ||EndpointLinksResolver#<init>:58|Exposing 2 endpoint(s) beneath base path '/actuator'
2020-04-29 12:19:59.498|main|INFO ||EurekaServiceRegistry#register:41|Registering application EUREKA-SERVER with eureka with status UP
2020-04-29 12:19:59.500|Thread-19|INFO ||EurekaServerBootstrap#initEurekaEnvironment:110|Setting the eureka configuration..
2020-04-29 12:19:59.501|Thread-19|INFO ||EurekaServerBootstrap#initEurekaEnvironment:115|Eureka data center value eureka.datacenter is not set, defaulting to default
2020-04-29 12:19:59.501|Thread-19|INFO ||EurekaServerBootstrap#initEurekaEnvironment:129|Eureka environment value eureka.environment is not set, defaulting to test
2020-04-29 12:19:59.508|Thread-19|INFO ||EurekaServerBootstrap#isAws:188|isAws returned false
2020-04-29 12:19:59.508|Thread-19|INFO ||EurekaServerBootstrap#initEurekaServerContext:153|Initialized server context
2020-04-29 12:19:59.509|Thread-19|INFO ||PeerAwareInstanceRegistryImpl#openForTraffic:242|Got 1 instances from neighboring DS node
2020-04-29 12:19:59.509|Thread-19|INFO ||PeerAwareInstanceRegistryImpl#openForTraffic:243|Renew threshold is: 1
2020-04-29 12:19:59.509|Thread-19|INFO ||PeerAwareInstanceRegistryImpl#openForTraffic:254|Changing status to UP
2020-04-29 12:19:59.516|main|INFO ||DirectJDKLog#log:173|Starting ProtocolHandler ["http-nio-8761"]
2020-04-29 12:19:59.519|Thread-19|INFO ||EurekaServerInitializerConfiguration#lambda$start$0:72|Started Eureka Server
2020-04-29 12:19:59.540|main|INFO ||TomcatWebServer#start:204|Tomcat started on port(s): 8761 (http) with context path ''
2020-04-29 12:19:59.541|main|INFO ||EurekaAutoServiceRegistration#onApplicationEvent:145|Updating port to 8761
2020-04-29 12:19:59.803|main|INFO ||StartupInfoLogger#logStarted:61|Started EurekaApplication in 4.74 seconds (JVM running for 5.437)
2020-04-29 12:19:59.902|RMI TCP Connection(3)-127.0.0.1|INFO ||DirectJDKLog#log:173|Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-29 12:19:59.902|RMI TCP Connection(3)-127.0.0.1|INFO ||FrameworkServlet#initServletBean:525|Initializing Servlet 'dispatcherServlet'
2020-04-29 12:19:59.908|RMI TCP Connection(3)-127.0.0.1|INFO ||FrameworkServlet#initServletBean:547|Completed initialization in 6 ms
2020-04-29 12:20:27.973|RMI TCP Connection(11)-127.0.0.1|INFO ||SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin#shutdown:159|Application shutdown requested.
2020-04-29 12:20:27.974|RMI TCP Connection(11)-127.0.0.1|INFO ||EurekaServiceRegistry#deregister:65|Unregistering application EUREKA-SERVER with eureka with status DOWN
2020-04-29 12:20:27.976|RMI TCP Connection(11)-127.0.0.1|INFO ||DefaultEurekaServerContext#shutdown:79|Shutting down ...
2020-04-29 12:20:27.997|RMI TCP Connection(11)-127.0.0.1|INFO ||DefaultEurekaServerContext#shutdown:84|Shut down
2020-04-29 12:20:28.001|RMI TCP Connection(11)-127.0.0.1|INFO ||ExecutorConfigurationSupport#shutdown:218|Shutting down ExecutorService 'applicationTaskExecutor'
2020-04-29 12:20:28.004|RMI TCP Connection(11)-127.0.0.1|INFO ||DiscoveryClient#shutdown:909|Shutting down DiscoveryClient ...
2020-04-29 12:20:28.005|RMI TCP Connection(11)-127.0.0.1|INFO ||DiscoveryClient#shutdown:934|Completed shut down of DiscoveryClient
2020-04-29 12:20:28.006|RMI TCP Connection(11)-127.0.0.1|INFO ||DirectJDKLog#log:173|Pausing ProtocolHandler ["http-nio-8761"]
2020-04-29 12:20:28.148|RMI TCP Connection(11)-127.0.0.1|INFO ||DirectJDKLog#log:173|Stopping service [Tomcat]
2020-04-29 12:20:28.149|RMI TCP Connection(11)-127.0.0.1|INFO ||DirectJDKLog#log:173|Destroying Spring FrameworkServlet 'dispatcherServlet'
2020-04-29 12:20:28.154|RMI TCP Connection(11)-127.0.0.1|INFO ||DirectJDKLog#log:173|Stopping ProtocolHandler ["http-nio-8761"]
2020-04-29 12:20:28.158|RMI TCP Connection(11)-127.0.0.1|INFO ||DirectJDKLog#log:173|Destroying ProtocolHandler ["http-nio-8761"]
